name: CD-develop
run-name: ${{ github.actor }} ran github actions

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  DOCKER_IMAGE: sbmsky/taraedle_server:develop
  SSH_CONTAINER: taraedle_server

jobs:
  Delivery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESSTOKEN }}

      - name: Create ENV
        env:
          ENV_DEVELOPMENT: ${{ secrets.ENV_DEVELOPMENT }}
        run: |
          touch .env
          echo "$ENV_DEVELOPMENT" >> .env

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          push: true
          no-cache: true
          tags: ${{ env.DOCKER_IMAGE }}

  Deploy:
    env:
      IP: ${{ secrets.SSH_IP }}
      USER: ${{ secrets.SSH_ID }}
      NAME: ${{ env.SSH_CONTAINER }}
    runs-on: ubuntu-latest
    needs: Delivery

    steps:
      - name: SSH key create
        run: |
          mkdir -p ~/.ssh
          echo "$PEM" > ~/.ssh/id_ed25519
          sudo chmod 600 ~/.ssh/id_ed25519
        env:
          PEM: ${{ secrets.SSH_PEM }}

      - name: Add host to known_hosts
        run: |
          chmod 700 ~/.ssh
          ssh-keyscan $IP >> ~/.ssh/known_hosts

      - name: Stop previous container
        continue-on-error: true
        run: |
          ssh -tt -i ~/.ssh/id_ed25519 $USER@$IP docker stop $NAME

      - name: Remove previous container
        continue-on-error: true
        run: |
          ssh -tt -i ~/.ssh/id_ed25519 $USER@$IP docker rm $NAME

      - name: Remove previous image
        continue-on-error: true
        run: |
          ssh -tt -i ~/.ssh/id_ed25519 $USER@$IP docker rmi $DOCKER_IMAGE

      - name: Deploy Server
        run: |
          ssh -tt -i ~/.ssh/id_ed25519 $USER@$IP docker pull $DOCKER_IMAGE

          ssh -tt -i ~/.ssh/id_ed25519 $USER@$IP docker run -d \
          -e NODE_ENV=dev \
          --name $NAME \
          --expose 8000 \
          --network=nginx-proxy \
          $DOCKER_IMAGE
